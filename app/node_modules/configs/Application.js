import React from "%{ amd: 'react', brunch: '!React', common: 'react' }";
import ReactDOM from "%{ amd: 'react-dom', brunch: '!ReactDOM', common: 'react-dom' }";
import $ from "%{amd: 'jquery', brunch: '!jQuery', common: 'jquery'}";
import i18n from "%{amd: 'i18next', brunch: '!i18next', common: 'i18next'}";
import BaseApplication from "umd-core/src/BaseApplication";
import internationalize from "umd-core/src/internationalize";
import validation from "umd-core/src/validation/validation";
import validators from "umd-core/src/validation/validators";
import AppRouter from "./AppRouter";
import resources from "./resources";
import Toolbar from "../components/Toolbar";

module.exports = class Application extends BaseApplication {
    get name() {
        return "application";
    }

    initRouter(options) {
        this.router = new AppRouter({ app: this });
    }

    init() {
        // multilingual configuration
        this.addInitializer(internationalize);

        // add model validation
        this.addInitializer(validation);
        validators.defaults.translator = i18n;

        this.addInitializer(options => {
            const app = this;
            const {router} = app;

            // add translations
            app.updateResources(resources);

            // append some containers
            $(document.body).append(`
                <div id="toolbar"></div>
                <div id="content"></div>
            `);

            // render Toolbar in #toolbar
            ReactDOM.render(<Toolbar app={ app } />, document.getElementById("toolbar"));

            // tell the router to render content in #content
            router.container = document.getElementById("content");
        });
    }
};

import React from "%{ amd: 'react', common: '!React' }";
import ReactModelView from "umd-core/src/views/ReactModelView";
import ArrayComponent from "umd-core/src/components/ArrayComponent";
import { $ } from "umd-core/src/common";
import "%{ amd: 'jquery-mockjax' }";

// simulate a server call
// https://github.com/jakerella/jquery-mockjax
$.mockjax({
    url: "/rest/phone-list",
    type: "GET",
    responseTime: [50, 300],
    responseText: [
        {
            name: "Nexus S",
            snippet: "Fast just got faster with Nexus S.",
            age: 1
        }, {
            name: "Motorola XOOM™ with Wi-Fi",
            snippet: "The Next, Next Generation tablet.",
            age: 2
        }, {
            name: "MOTOROLA XOOM™",
            snippet: "The Next, Next Generation tablet.",
            age: 3
        }, {
            age: 13,
            id: "motorola-defy-with-motoblur",
            name: "Motorola DEFY\u2122 with MOTOBLUR\u2122",
            snippet: "Are you ready for everything life throws your way?"
        }
    ]
});

module.exports = class Step3View extends ReactModelView {
    initialize() {
        this.inline.set("order", "age");
        this.state = {
            collection: []
        };
    }

    fetch() {
        $.ajax({
            url: "/rest/phone-list",
            type: "GET",
            success: data => {
                this.setState({
                    collection: data
                });
            }
        });
    }

    componentDidMount() {
        super.componentDidMount();
        this.fetch();
    }

    childNode(phone, index) {
        return (
            <li key={ index }>
                <span className="name">{ phone.name }</span>
                <p className="snippet">
                    { phone.snippet }
                </p>
            </li>
        );
    }

    render() {
        return (
            <div className="container-fluid">
                <div className="row">
                    <div className="col-md-4">
                        { /* every inline defined model value are available with this.inline.get(name) */ } Search:
                        <input spModel="query" /> Sort by:
                        <select spModel="order">
                            <option value="name">
                                Alphabetical
                            </option>
                            <option value="age">
                                Newest
                            </option>
                        </select>
                    </div>
                    <div className="col-md-8">
                        <ArrayComponent tagName="ul"
                            className="phones"
                            collection={ this.state.collection }
                            filter={ this.inline.get("query") }
                            order={ this.inline.get("order") }
                            childNode={ this.childNode } />
                    </div>
                </div>
            </div>
        );
    }
};

deps = [
    'umd-core/src/common'
    'umd-core/src/views/ReactModelView'
    'umd-core/src/models/BackboneCollection'
    'umd-core/src/views/ReactCollectionView'
    {amd: 'jquery-mockjax'}
]

freact = ({_, $}, ReactModelView, BackboneCollection, ReactCollectionView)->

    # simulate a server call
    # https://github.com/jakerella/jquery-mockjax
    $.mockjax
        url: '/rest/phone-list'
        type: 'GET'
        responseTime: [50, 300],
        responseText: [
            {
                'name': 'Nexus S'
                'snippet': 'Fast just got faster with Nexus S.'
                'age': 1
            }
            {
                'name': 'Motorola XOOM™ with Wi-Fi'
                'snippet': 'The Next, Next Generation tablet.'
                'age': 2
            }
            {
                'name': 'MOTOROLA XOOM™'
                'snippet': 'The Next, Next Generation tablet.'
                'age': 3
            }
            {
                'age': 13
                'id': "motorola-defy-with-motoblur"
                'name': "Motorola DEFY\u2122 with MOTOBLUR\u2122"
                'snippet': "Are you ready for everything life throws your way?"
            }
        ]

    class PhoneList extends BackboneCollection
        url: '/rest/phone-list'

    class Step3View extends ReactModelView
        phones: new PhoneList()

        initialize: ->
            # set inlined model value orderProp to 'age'
            @inline.set 'orderProp', 'age'
            return

        componentDidMount: ->
            super
            @phones.fetch()
            return

        childNode: (phone)->
            `<li key={phone.cid}>
                <span className="name">{phone.get('name')}</span>
                <p className="snippet">{phone.get('snippet')}</p>
            </li>`

        render: ->
            `<div className="container-fluid">
                <div className="row">
                    <div className="col-md-4">
                        {/* every inline defined model value are available with this.inline.get(name) */}
                        Search: <input spModel="query" />

                        Sort by:
                        <select spModel="orderProp">
                            <option value="name">Alphabetical</option>
                            <option value="age">Newest</option>
                        </select>
                    </div>
                    <div className="col-md-8">

                        <ReactCollectionView
                            tagName="ul"
                            className="phones"
                            model={this.phones}
                            filter={this.inline.get('query')}
                            order={this.inline.get('orderProp')}
                            childNode={this.childNode}/>

                    </div>
                </div>
            </div>`